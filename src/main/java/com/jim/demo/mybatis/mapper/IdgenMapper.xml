<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jim.demo.mybatis.mapper.IdgenMapper">
  <resultMap id="BaseResultMap" type="com.jim.demo.mybatis.model.Idgen">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    <result column="IdType" jdbcType="INTEGER" property="idtype" />
    <result column="CurrentId" jdbcType="BIGINT" property="currentid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    `IdType`, `CurrentId`
  </sql>
  <select id="selectByExample" parameterType="com.jim.demo.mybatis.model.IdgenExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `IdGen`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jim.demo.mybatis.model.IdgenExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    delete from `IdGen`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jim.demo.mybatis.model.Idgen">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    insert into `IdGen` (`IdType`, `CurrentId`)
    values (#{idtype,jdbcType=INTEGER}, #{currentid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jim.demo.mybatis.model.Idgen">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    insert into `IdGen`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('IdType')">
            `IdType`,
          </if>
          <if test="_parameter.hasSelective('CurrentId')">
            `CurrentId`,
          </if>
        </when>
        <otherwise>
          <if test="idtype != null">
            `IdType`,
          </if>
          <if test="currentid != null">
            `CurrentId`,
          </if>
        </otherwise>
      </choose>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('IdType')">
            #{idtype,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('CurrentId')">
            #{currentid,jdbcType=BIGINT},
          </if>
        </when>
        <otherwise>
          <if test="idtype != null">
            #{idtype,jdbcType=INTEGER},
          </if>
          <if test="currentid != null">
            #{currentid,jdbcType=BIGINT},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jim.demo.mybatis.model.IdgenExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    select count(*) from `IdGen`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    update `IdGen`
    <set>
      <choose>
        <when test="record.hasSelective()">
          <if test="record.hasSelective('IdType')">
            `IdType` = #{record.idtype,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('CurrentId')">
            `CurrentId` = #{record.currentid,jdbcType=BIGINT},
          </if>
        </when>
        <otherwise>
          <if test="record.idtype != null">
            `IdType` = #{record.idtype,jdbcType=INTEGER},
          </if>
          <if test="record.currentid != null">
            `CurrentId` = #{record.currentid,jdbcType=BIGINT},
          </if>
        </otherwise>
      </choose>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    update `IdGen`
    set `IdType` = #{record.idtype,jdbcType=INTEGER},
      `CurrentId` = #{record.currentid,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectOneByExample" parameterType="com.jim.demo.mybatis.model.IdgenExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from `IdGen`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `IdGen`
    (`IdType`, `CurrentId`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.idtype,jdbcType=INTEGER}, #{item.currentid,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `IdGen` (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'IdType' == column.value">
          #{item.idtype,jdbcType=INTEGER}
        </if>
        <if test="'CurrentId' == column.value">
          #{item.currentid,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsert" parameterType="com.jim.demo.mybatis.model.Idgen">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `IdGen`
    (`IdType`, `CurrentId`)
    values
    (#{idtype,jdbcType=INTEGER}, #{currentid,jdbcType=BIGINT})
    on duplicate key update 
    `IdType` = #{idtype,jdbcType=INTEGER}, 
    `CurrentId` = #{currentid,jdbcType=BIGINT}
  </insert>
  <insert id="upsertSelective" parameterType="com.jim.demo.mybatis.model.Idgen">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `IdGen`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('IdType')">
            `IdType`,
          </if>
          <if test="_parameter.hasSelective('CurrentId')">
            `CurrentId`,
          </if>
        </when>
        <otherwise>
          <if test="idtype != null">
            `IdType`,
          </if>
          <if test="currentid != null">
            `CurrentId`,
          </if>
        </otherwise>
      </choose>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('IdType')">
            #{idtype,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('CurrentId')">
            #{currentid,jdbcType=BIGINT},
          </if>
        </when>
        <otherwise>
          <if test="idtype != null">
            #{idtype,jdbcType=INTEGER},
          </if>
          <if test="currentid != null">
            #{currentid,jdbcType=BIGINT},
          </if>
        </otherwise>
      </choose>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('IdType')">
            `IdType` = #{idtype,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('CurrentId')">
            `CurrentId` = #{currentid,jdbcType=BIGINT},
          </if>
        </when>
        <otherwise>
          <if test="idtype != null">
            `IdType` = #{idtype,jdbcType=INTEGER},
          </if>
          <if test="currentid != null">
            `CurrentId` = #{currentid,jdbcType=BIGINT},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
</mapper>