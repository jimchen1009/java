<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jim.demo.mybatis.mapper.StockMapper">
  <resultMap id="BaseResultMap" type="com.jim.demo.mybatis.model.Stock">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    <result column="Id" jdbcType="BIGINT" property="id" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Type" jdbcType="VARCHAR" property="type" />
    <result column="Num" jdbcType="INTEGER" property="num" />
    <result column="Unit" jdbcType="VARCHAR" property="unit" />
    <result column="GetPrice" jdbcType="DOUBLE" property="getprice" />
    <result column="SalePrice" jdbcType="DOUBLE" property="saleprice" />
    <result column="NoticeNum" jdbcType="INTEGER" property="noticenum" />
    <result column="Vender" jdbcType="VARCHAR" property="vender" />
    <result column="Comment" jdbcType="VARCHAR" property="comment" />
    <result column="Delete" jdbcType="INTEGER" property="delete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    `Id`, `Name`, `Type`, `Num`, `Unit`, `GetPrice`, `SalePrice`, `NoticeNum`, `Vender`, 
    `Comment`, `Delete`
  </sql>
  <select id="selectByExample" parameterType="com.jim.demo.mybatis.model.StockExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `Stock`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jim.demo.mybatis.model.StockExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    delete from `Stock`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jim.demo.mybatis.model.Stock">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    insert into `Stock` (`Id`, `Name`, `Type`, 
      `Num`, `Unit`, `GetPrice`, 
      `SalePrice`, `NoticeNum`, `Vender`, 
      `Comment`, `Delete`)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{unit,jdbcType=VARCHAR}, #{getprice,jdbcType=DOUBLE}, 
      #{saleprice,jdbcType=DOUBLE}, #{noticenum,jdbcType=INTEGER}, #{vender,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{delete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jim.demo.mybatis.model.Stock">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    insert into `Stock`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('Id')">
            `Id`,
          </if>
          <if test="_parameter.hasSelective('Name')">
            `Name`,
          </if>
          <if test="_parameter.hasSelective('Type')">
            `Type`,
          </if>
          <if test="_parameter.hasSelective('Num')">
            `Num`,
          </if>
          <if test="_parameter.hasSelective('Unit')">
            `Unit`,
          </if>
          <if test="_parameter.hasSelective('GetPrice')">
            `GetPrice`,
          </if>
          <if test="_parameter.hasSelective('SalePrice')">
            `SalePrice`,
          </if>
          <if test="_parameter.hasSelective('NoticeNum')">
            `NoticeNum`,
          </if>
          <if test="_parameter.hasSelective('Vender')">
            `Vender`,
          </if>
          <if test="_parameter.hasSelective('Comment')">
            `Comment`,
          </if>
          <if test="_parameter.hasSelective('Delete')">
            `Delete`,
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            `Id`,
          </if>
          <if test="name != null">
            `Name`,
          </if>
          <if test="type != null">
            `Type`,
          </if>
          <if test="num != null">
            `Num`,
          </if>
          <if test="unit != null">
            `Unit`,
          </if>
          <if test="getprice != null">
            `GetPrice`,
          </if>
          <if test="saleprice != null">
            `SalePrice`,
          </if>
          <if test="noticenum != null">
            `NoticeNum`,
          </if>
          <if test="vender != null">
            `Vender`,
          </if>
          <if test="comment != null">
            `Comment`,
          </if>
          <if test="delete != null">
            `Delete`,
          </if>
        </otherwise>
      </choose>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('Id')">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('Name')">
            #{name,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Type')">
            #{type,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Num')">
            #{num,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('Unit')">
            #{unit,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('GetPrice')">
            #{getprice,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('SalePrice')">
            #{saleprice,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('NoticeNum')">
            #{noticenum,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('Vender')">
            #{vender,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Comment')">
            #{comment,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Delete')">
            #{delete,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="name != null">
            #{name,jdbcType=VARCHAR},
          </if>
          <if test="type != null">
            #{type,jdbcType=VARCHAR},
          </if>
          <if test="num != null">
            #{num,jdbcType=INTEGER},
          </if>
          <if test="unit != null">
            #{unit,jdbcType=VARCHAR},
          </if>
          <if test="getprice != null">
            #{getprice,jdbcType=DOUBLE},
          </if>
          <if test="saleprice != null">
            #{saleprice,jdbcType=DOUBLE},
          </if>
          <if test="noticenum != null">
            #{noticenum,jdbcType=INTEGER},
          </if>
          <if test="vender != null">
            #{vender,jdbcType=VARCHAR},
          </if>
          <if test="comment != null">
            #{comment,jdbcType=VARCHAR},
          </if>
          <if test="delete != null">
            #{delete,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jim.demo.mybatis.model.StockExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    select count(*) from `Stock`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    update `Stock`
    <set>
      <choose>
        <when test="record.hasSelective()">
          <if test="record.hasSelective('Id')">
            `Id` = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.hasSelective('Name')">
            `Name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('Type')">
            `Type` = #{record.type,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('Num')">
            `Num` = #{record.num,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('Unit')">
            `Unit` = #{record.unit,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('GetPrice')">
            `GetPrice` = #{record.getprice,jdbcType=DOUBLE},
          </if>
          <if test="record.hasSelective('SalePrice')">
            `SalePrice` = #{record.saleprice,jdbcType=DOUBLE},
          </if>
          <if test="record.hasSelective('NoticeNum')">
            `NoticeNum` = #{record.noticenum,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('Vender')">
            `Vender` = #{record.vender,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('Comment')">
            `Comment` = #{record.comment,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('Delete')">
            `Delete` = #{record.delete,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="record.id != null">
            `Id` = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            `Name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.type != null">
            `Type` = #{record.type,jdbcType=VARCHAR},
          </if>
          <if test="record.num != null">
            `Num` = #{record.num,jdbcType=INTEGER},
          </if>
          <if test="record.unit != null">
            `Unit` = #{record.unit,jdbcType=VARCHAR},
          </if>
          <if test="record.getprice != null">
            `GetPrice` = #{record.getprice,jdbcType=DOUBLE},
          </if>
          <if test="record.saleprice != null">
            `SalePrice` = #{record.saleprice,jdbcType=DOUBLE},
          </if>
          <if test="record.noticenum != null">
            `NoticeNum` = #{record.noticenum,jdbcType=INTEGER},
          </if>
          <if test="record.vender != null">
            `Vender` = #{record.vender,jdbcType=VARCHAR},
          </if>
          <if test="record.comment != null">
            `Comment` = #{record.comment,jdbcType=VARCHAR},
          </if>
          <if test="record.delete != null">
            `Delete` = #{record.delete,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    update `Stock`
    set `Id` = #{record.id,jdbcType=BIGINT},
      `Name` = #{record.name,jdbcType=VARCHAR},
      `Type` = #{record.type,jdbcType=VARCHAR},
      `Num` = #{record.num,jdbcType=INTEGER},
      `Unit` = #{record.unit,jdbcType=VARCHAR},
      `GetPrice` = #{record.getprice,jdbcType=DOUBLE},
      `SalePrice` = #{record.saleprice,jdbcType=DOUBLE},
      `NoticeNum` = #{record.noticenum,jdbcType=INTEGER},
      `Vender` = #{record.vender,jdbcType=VARCHAR},
      `Comment` = #{record.comment,jdbcType=VARCHAR},
      `Delete` = #{record.delete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectOneByExample" parameterType="com.jim.demo.mybatis.model.StockExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from `Stock`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `Stock`
    (`Id`, `Name`, `Type`, `Num`, `Unit`, `GetPrice`, `SalePrice`, `NoticeNum`, `Vender`, 
      `Comment`, `Delete`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, #{item.type,jdbcType=VARCHAR}, 
        #{item.num,jdbcType=INTEGER}, #{item.unit,jdbcType=VARCHAR}, #{item.getprice,jdbcType=DOUBLE}, 
        #{item.saleprice,jdbcType=DOUBLE}, #{item.noticenum,jdbcType=INTEGER}, #{item.vender,jdbcType=VARCHAR}, 
        #{item.comment,jdbcType=VARCHAR}, #{item.delete,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `Stock` (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'Id' == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'Name' == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'Type' == column.value">
          #{item.type,jdbcType=VARCHAR}
        </if>
        <if test="'Num' == column.value">
          #{item.num,jdbcType=INTEGER}
        </if>
        <if test="'Unit' == column.value">
          #{item.unit,jdbcType=VARCHAR}
        </if>
        <if test="'GetPrice' == column.value">
          #{item.getprice,jdbcType=DOUBLE}
        </if>
        <if test="'SalePrice' == column.value">
          #{item.saleprice,jdbcType=DOUBLE}
        </if>
        <if test="'NoticeNum' == column.value">
          #{item.noticenum,jdbcType=INTEGER}
        </if>
        <if test="'Vender' == column.value">
          #{item.vender,jdbcType=VARCHAR}
        </if>
        <if test="'Comment' == column.value">
          #{item.comment,jdbcType=VARCHAR}
        </if>
        <if test="'Delete' == column.value">
          #{item.delete,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsert" parameterType="com.jim.demo.mybatis.model.Stock">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `Stock`
    (`Id`, `Name`, `Type`, `Num`, `Unit`, `GetPrice`, `SalePrice`, `NoticeNum`, `Vender`, 
      `Comment`, `Delete`)
    values
    (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, 
      #{unit,jdbcType=VARCHAR}, #{getprice,jdbcType=DOUBLE}, #{saleprice,jdbcType=DOUBLE}, 
      #{noticenum,jdbcType=INTEGER}, #{vender,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{delete,jdbcType=INTEGER})
    on duplicate key update 
    `Id` = #{id,jdbcType=BIGINT}, 
    `Name` = #{name,jdbcType=VARCHAR}, 
    `Type` = #{type,jdbcType=VARCHAR}, 
    `Num` = #{num,jdbcType=INTEGER}, 
    `Unit` = #{unit,jdbcType=VARCHAR}, 
    `GetPrice` = #{getprice,jdbcType=DOUBLE}, 
    `SalePrice` = #{saleprice,jdbcType=DOUBLE}, 
    `NoticeNum` = #{noticenum,jdbcType=INTEGER}, 
    `Vender` = #{vender,jdbcType=VARCHAR}, 
    `Comment` = #{comment,jdbcType=VARCHAR}, 
    `Delete` = #{delete,jdbcType=INTEGER}
  </insert>
  <insert id="upsertSelective" parameterType="com.jim.demo.mybatis.model.Stock">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `Stock`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('Id')">
            `Id`,
          </if>
          <if test="_parameter.hasSelective('Name')">
            `Name`,
          </if>
          <if test="_parameter.hasSelective('Type')">
            `Type`,
          </if>
          <if test="_parameter.hasSelective('Num')">
            `Num`,
          </if>
          <if test="_parameter.hasSelective('Unit')">
            `Unit`,
          </if>
          <if test="_parameter.hasSelective('GetPrice')">
            `GetPrice`,
          </if>
          <if test="_parameter.hasSelective('SalePrice')">
            `SalePrice`,
          </if>
          <if test="_parameter.hasSelective('NoticeNum')">
            `NoticeNum`,
          </if>
          <if test="_parameter.hasSelective('Vender')">
            `Vender`,
          </if>
          <if test="_parameter.hasSelective('Comment')">
            `Comment`,
          </if>
          <if test="_parameter.hasSelective('Delete')">
            `Delete`,
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            `Id`,
          </if>
          <if test="name != null">
            `Name`,
          </if>
          <if test="type != null">
            `Type`,
          </if>
          <if test="num != null">
            `Num`,
          </if>
          <if test="unit != null">
            `Unit`,
          </if>
          <if test="getprice != null">
            `GetPrice`,
          </if>
          <if test="saleprice != null">
            `SalePrice`,
          </if>
          <if test="noticenum != null">
            `NoticeNum`,
          </if>
          <if test="vender != null">
            `Vender`,
          </if>
          <if test="comment != null">
            `Comment`,
          </if>
          <if test="delete != null">
            `Delete`,
          </if>
        </otherwise>
      </choose>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('Id')">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('Name')">
            #{name,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Type')">
            #{type,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Num')">
            #{num,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('Unit')">
            #{unit,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('GetPrice')">
            #{getprice,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('SalePrice')">
            #{saleprice,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('NoticeNum')">
            #{noticenum,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('Vender')">
            #{vender,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Comment')">
            #{comment,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Delete')">
            #{delete,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="name != null">
            #{name,jdbcType=VARCHAR},
          </if>
          <if test="type != null">
            #{type,jdbcType=VARCHAR},
          </if>
          <if test="num != null">
            #{num,jdbcType=INTEGER},
          </if>
          <if test="unit != null">
            #{unit,jdbcType=VARCHAR},
          </if>
          <if test="getprice != null">
            #{getprice,jdbcType=DOUBLE},
          </if>
          <if test="saleprice != null">
            #{saleprice,jdbcType=DOUBLE},
          </if>
          <if test="noticenum != null">
            #{noticenum,jdbcType=INTEGER},
          </if>
          <if test="vender != null">
            #{vender,jdbcType=VARCHAR},
          </if>
          <if test="comment != null">
            #{comment,jdbcType=VARCHAR},
          </if>
          <if test="delete != null">
            #{delete,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('Id')">
            `Id` = #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('Name')">
            `Name` = #{name,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Type')">
            `Type` = #{type,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Num')">
            `Num` = #{num,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('Unit')">
            `Unit` = #{unit,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('GetPrice')">
            `GetPrice` = #{getprice,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('SalePrice')">
            `SalePrice` = #{saleprice,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('NoticeNum')">
            `NoticeNum` = #{noticenum,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('Vender')">
            `Vender` = #{vender,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Comment')">
            `Comment` = #{comment,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Delete')">
            `Delete` = #{delete,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            `Id` = #{id,jdbcType=BIGINT},
          </if>
          <if test="name != null">
            `Name` = #{name,jdbcType=VARCHAR},
          </if>
          <if test="type != null">
            `Type` = #{type,jdbcType=VARCHAR},
          </if>
          <if test="num != null">
            `Num` = #{num,jdbcType=INTEGER},
          </if>
          <if test="unit != null">
            `Unit` = #{unit,jdbcType=VARCHAR},
          </if>
          <if test="getprice != null">
            `GetPrice` = #{getprice,jdbcType=DOUBLE},
          </if>
          <if test="saleprice != null">
            `SalePrice` = #{saleprice,jdbcType=DOUBLE},
          </if>
          <if test="noticenum != null">
            `NoticeNum` = #{noticenum,jdbcType=INTEGER},
          </if>
          <if test="vender != null">
            `Vender` = #{vender,jdbcType=VARCHAR},
          </if>
          <if test="comment != null">
            `Comment` = #{comment,jdbcType=VARCHAR},
          </if>
          <if test="delete != null">
            `Delete` = #{delete,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
</mapper>