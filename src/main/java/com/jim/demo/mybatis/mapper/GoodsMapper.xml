<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jim.demo.mybatis.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.jim.demo.mybatis.model.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    <result column="Id" jdbcType="BIGINT" property="id" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Goods" jdbcType="BIGINT" property="goods" />
    <result column="GoodsDelete" jdbcType="VARCHAR" property="goodsdelete" />
    <result column="Approach" jdbcType="VARCHAR" property="approach" />
    <result column="User" jdbcType="VARCHAR" property="user" />
    <result column="Order" jdbcType="BIGINT" property="order" />
    <result column="Date" jdbcType="TIMESTAMP" property="date" />
    <result column="Num" jdbcType="INTEGER" property="num" />
    <result column="Price" jdbcType="DOUBLE" property="price" />
    <result column="Amount" jdbcType="DOUBLE" property="amount" />
    <result column="Comment" jdbcType="VARCHAR" property="comment" />
    <result column="Delete" jdbcType="INTEGER" property="delete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    `Id`, `Name`, `Goods`, `GoodsDelete`, `Approach`, `User`, `Order`, `Date`, `Num`, 
    `Price`, `Amount`, `Comment`, `Delete`
  </sql>
  <select id="selectByExample" parameterType="com.jim.demo.mybatis.model.GoodsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `Goods`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.jim.demo.mybatis.model.GoodsExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    delete from `Goods`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jim.demo.mybatis.model.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    insert into `Goods` (`Id`, `Name`, `Goods`, 
      `GoodsDelete`, `Approach`, `User`, 
      `Order`, `Date`, `Num`, 
      `Price`, `Amount`, `Comment`, 
      `Delete`)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{goods,jdbcType=BIGINT}, 
      #{goodsdelete,jdbcType=VARCHAR}, #{approach,jdbcType=VARCHAR}, #{user,jdbcType=VARCHAR}, 
      #{order,jdbcType=BIGINT}, #{date,jdbcType=TIMESTAMP}, #{num,jdbcType=INTEGER}, 
      #{price,jdbcType=DOUBLE}, #{amount,jdbcType=DOUBLE}, #{comment,jdbcType=VARCHAR}, 
      #{delete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jim.demo.mybatis.model.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    insert into `Goods`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('Id')">
            `Id`,
          </if>
          <if test="_parameter.hasSelective('Name')">
            `Name`,
          </if>
          <if test="_parameter.hasSelective('Goods')">
            `Goods`,
          </if>
          <if test="_parameter.hasSelective('GoodsDelete')">
            `GoodsDelete`,
          </if>
          <if test="_parameter.hasSelective('Approach')">
            `Approach`,
          </if>
          <if test="_parameter.hasSelective('User')">
            `User`,
          </if>
          <if test="_parameter.hasSelective('Order')">
            `Order`,
          </if>
          <if test="_parameter.hasSelective('Date')">
            `Date`,
          </if>
          <if test="_parameter.hasSelective('Num')">
            `Num`,
          </if>
          <if test="_parameter.hasSelective('Price')">
            `Price`,
          </if>
          <if test="_parameter.hasSelective('Amount')">
            `Amount`,
          </if>
          <if test="_parameter.hasSelective('Comment')">
            `Comment`,
          </if>
          <if test="_parameter.hasSelective('Delete')">
            `Delete`,
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            `Id`,
          </if>
          <if test="name != null">
            `Name`,
          </if>
          <if test="goods != null">
            `Goods`,
          </if>
          <if test="goodsdelete != null">
            `GoodsDelete`,
          </if>
          <if test="approach != null">
            `Approach`,
          </if>
          <if test="user != null">
            `User`,
          </if>
          <if test="order != null">
            `Order`,
          </if>
          <if test="date != null">
            `Date`,
          </if>
          <if test="num != null">
            `Num`,
          </if>
          <if test="price != null">
            `Price`,
          </if>
          <if test="amount != null">
            `Amount`,
          </if>
          <if test="comment != null">
            `Comment`,
          </if>
          <if test="delete != null">
            `Delete`,
          </if>
        </otherwise>
      </choose>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('Id')">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('Name')">
            #{name,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Goods')">
            #{goods,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('GoodsDelete')">
            #{goodsdelete,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Approach')">
            #{approach,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('User')">
            #{user,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Order')">
            #{order,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('Date')">
            #{date,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('Num')">
            #{num,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('Price')">
            #{price,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('Amount')">
            #{amount,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('Comment')">
            #{comment,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Delete')">
            #{delete,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="name != null">
            #{name,jdbcType=VARCHAR},
          </if>
          <if test="goods != null">
            #{goods,jdbcType=BIGINT},
          </if>
          <if test="goodsdelete != null">
            #{goodsdelete,jdbcType=VARCHAR},
          </if>
          <if test="approach != null">
            #{approach,jdbcType=VARCHAR},
          </if>
          <if test="user != null">
            #{user,jdbcType=VARCHAR},
          </if>
          <if test="order != null">
            #{order,jdbcType=BIGINT},
          </if>
          <if test="date != null">
            #{date,jdbcType=TIMESTAMP},
          </if>
          <if test="num != null">
            #{num,jdbcType=INTEGER},
          </if>
          <if test="price != null">
            #{price,jdbcType=DOUBLE},
          </if>
          <if test="amount != null">
            #{amount,jdbcType=DOUBLE},
          </if>
          <if test="comment != null">
            #{comment,jdbcType=VARCHAR},
          </if>
          <if test="delete != null">
            #{delete,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jim.demo.mybatis.model.GoodsExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    select count(*) from `Goods`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    update `Goods`
    <set>
      <choose>
        <when test="record.hasSelective()">
          <if test="record.hasSelective('Id')">
            `Id` = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.hasSelective('Name')">
            `Name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('Goods')">
            `Goods` = #{record.goods,jdbcType=BIGINT},
          </if>
          <if test="record.hasSelective('GoodsDelete')">
            `GoodsDelete` = #{record.goodsdelete,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('Approach')">
            `Approach` = #{record.approach,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('User')">
            `User` = #{record.user,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('Order')">
            `Order` = #{record.order,jdbcType=BIGINT},
          </if>
          <if test="record.hasSelective('Date')">
            `Date` = #{record.date,jdbcType=TIMESTAMP},
          </if>
          <if test="record.hasSelective('Num')">
            `Num` = #{record.num,jdbcType=INTEGER},
          </if>
          <if test="record.hasSelective('Price')">
            `Price` = #{record.price,jdbcType=DOUBLE},
          </if>
          <if test="record.hasSelective('Amount')">
            `Amount` = #{record.amount,jdbcType=DOUBLE},
          </if>
          <if test="record.hasSelective('Comment')">
            `Comment` = #{record.comment,jdbcType=VARCHAR},
          </if>
          <if test="record.hasSelective('Delete')">
            `Delete` = #{record.delete,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="record.id != null">
            `Id` = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            `Name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.goods != null">
            `Goods` = #{record.goods,jdbcType=BIGINT},
          </if>
          <if test="record.goodsdelete != null">
            `GoodsDelete` = #{record.goodsdelete,jdbcType=VARCHAR},
          </if>
          <if test="record.approach != null">
            `Approach` = #{record.approach,jdbcType=VARCHAR},
          </if>
          <if test="record.user != null">
            `User` = #{record.user,jdbcType=VARCHAR},
          </if>
          <if test="record.order != null">
            `Order` = #{record.order,jdbcType=BIGINT},
          </if>
          <if test="record.date != null">
            `Date` = #{record.date,jdbcType=TIMESTAMP},
          </if>
          <if test="record.num != null">
            `Num` = #{record.num,jdbcType=INTEGER},
          </if>
          <if test="record.price != null">
            `Price` = #{record.price,jdbcType=DOUBLE},
          </if>
          <if test="record.amount != null">
            `Amount` = #{record.amount,jdbcType=DOUBLE},
          </if>
          <if test="record.comment != null">
            `Comment` = #{record.comment,jdbcType=VARCHAR},
          </if>
          <if test="record.delete != null">
            `Delete` = #{record.delete,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Apr 18 16:08:01 CST 2018.
    -->
    update `Goods`
    set `Id` = #{record.id,jdbcType=BIGINT},
      `Name` = #{record.name,jdbcType=VARCHAR},
      `Goods` = #{record.goods,jdbcType=BIGINT},
      `GoodsDelete` = #{record.goodsdelete,jdbcType=VARCHAR},
      `Approach` = #{record.approach,jdbcType=VARCHAR},
      `User` = #{record.user,jdbcType=VARCHAR},
      `Order` = #{record.order,jdbcType=BIGINT},
      `Date` = #{record.date,jdbcType=TIMESTAMP},
      `Num` = #{record.num,jdbcType=INTEGER},
      `Price` = #{record.price,jdbcType=DOUBLE},
      `Amount` = #{record.amount,jdbcType=DOUBLE},
      `Comment` = #{record.comment,jdbcType=VARCHAR},
      `Delete` = #{record.delete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectOneByExample" parameterType="com.jim.demo.mybatis.model.GoodsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from `Goods`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `Goods`
    (`Id`, `Name`, `Goods`, `GoodsDelete`, `Approach`, `User`, `Order`, `Date`, `Num`, 
      `Price`, `Amount`, `Comment`, `Delete`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, #{item.goods,jdbcType=BIGINT}, 
        #{item.goodsdelete,jdbcType=VARCHAR}, #{item.approach,jdbcType=VARCHAR}, #{item.user,jdbcType=VARCHAR}, 
        #{item.order,jdbcType=BIGINT}, #{item.date,jdbcType=TIMESTAMP}, #{item.num,jdbcType=INTEGER}, 
        #{item.price,jdbcType=DOUBLE}, #{item.amount,jdbcType=DOUBLE}, #{item.comment,jdbcType=VARCHAR}, 
        #{item.delete,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `Goods` (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'Id' == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'Name' == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'Goods' == column.value">
          #{item.goods,jdbcType=BIGINT}
        </if>
        <if test="'GoodsDelete' == column.value">
          #{item.goodsdelete,jdbcType=VARCHAR}
        </if>
        <if test="'Approach' == column.value">
          #{item.approach,jdbcType=VARCHAR}
        </if>
        <if test="'User' == column.value">
          #{item.user,jdbcType=VARCHAR}
        </if>
        <if test="'Order' == column.value">
          #{item.order,jdbcType=BIGINT}
        </if>
        <if test="'Date' == column.value">
          #{item.date,jdbcType=TIMESTAMP}
        </if>
        <if test="'Num' == column.value">
          #{item.num,jdbcType=INTEGER}
        </if>
        <if test="'Price' == column.value">
          #{item.price,jdbcType=DOUBLE}
        </if>
        <if test="'Amount' == column.value">
          #{item.amount,jdbcType=DOUBLE}
        </if>
        <if test="'Comment' == column.value">
          #{item.comment,jdbcType=VARCHAR}
        </if>
        <if test="'Delete' == column.value">
          #{item.delete,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsert" parameterType="com.jim.demo.mybatis.model.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `Goods`
    (`Id`, `Name`, `Goods`, `GoodsDelete`, `Approach`, `User`, `Order`, `Date`, `Num`, 
      `Price`, `Amount`, `Comment`, `Delete`)
    values
    (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{goods,jdbcType=BIGINT}, #{goodsdelete,jdbcType=VARCHAR}, 
      #{approach,jdbcType=VARCHAR}, #{user,jdbcType=VARCHAR}, #{order,jdbcType=BIGINT}, 
      #{date,jdbcType=TIMESTAMP}, #{num,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{amount,jdbcType=DOUBLE}, #{comment,jdbcType=VARCHAR}, #{delete,jdbcType=INTEGER}
      )
    on duplicate key update 
    `Id` = #{id,jdbcType=BIGINT}, 
    `Name` = #{name,jdbcType=VARCHAR}, 
    `Goods` = #{goods,jdbcType=BIGINT}, 
    `GoodsDelete` = #{goodsdelete,jdbcType=VARCHAR}, 
    `Approach` = #{approach,jdbcType=VARCHAR}, 
    `User` = #{user,jdbcType=VARCHAR}, 
    `Order` = #{order,jdbcType=BIGINT}, 
    `Date` = #{date,jdbcType=TIMESTAMP}, 
    `Num` = #{num,jdbcType=INTEGER}, 
    `Price` = #{price,jdbcType=DOUBLE}, 
    `Amount` = #{amount,jdbcType=DOUBLE}, 
    `Comment` = #{comment,jdbcType=VARCHAR}, 
    `Delete` = #{delete,jdbcType=INTEGER}
  </insert>
  <insert id="upsertSelective" parameterType="com.jim.demo.mybatis.model.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into `Goods`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('Id')">
            `Id`,
          </if>
          <if test="_parameter.hasSelective('Name')">
            `Name`,
          </if>
          <if test="_parameter.hasSelective('Goods')">
            `Goods`,
          </if>
          <if test="_parameter.hasSelective('GoodsDelete')">
            `GoodsDelete`,
          </if>
          <if test="_parameter.hasSelective('Approach')">
            `Approach`,
          </if>
          <if test="_parameter.hasSelective('User')">
            `User`,
          </if>
          <if test="_parameter.hasSelective('Order')">
            `Order`,
          </if>
          <if test="_parameter.hasSelective('Date')">
            `Date`,
          </if>
          <if test="_parameter.hasSelective('Num')">
            `Num`,
          </if>
          <if test="_parameter.hasSelective('Price')">
            `Price`,
          </if>
          <if test="_parameter.hasSelective('Amount')">
            `Amount`,
          </if>
          <if test="_parameter.hasSelective('Comment')">
            `Comment`,
          </if>
          <if test="_parameter.hasSelective('Delete')">
            `Delete`,
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            `Id`,
          </if>
          <if test="name != null">
            `Name`,
          </if>
          <if test="goods != null">
            `Goods`,
          </if>
          <if test="goodsdelete != null">
            `GoodsDelete`,
          </if>
          <if test="approach != null">
            `Approach`,
          </if>
          <if test="user != null">
            `User`,
          </if>
          <if test="order != null">
            `Order`,
          </if>
          <if test="date != null">
            `Date`,
          </if>
          <if test="num != null">
            `Num`,
          </if>
          <if test="price != null">
            `Price`,
          </if>
          <if test="amount != null">
            `Amount`,
          </if>
          <if test="comment != null">
            `Comment`,
          </if>
          <if test="delete != null">
            `Delete`,
          </if>
        </otherwise>
      </choose>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('Id')">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('Name')">
            #{name,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Goods')">
            #{goods,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('GoodsDelete')">
            #{goodsdelete,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Approach')">
            #{approach,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('User')">
            #{user,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Order')">
            #{order,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('Date')">
            #{date,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('Num')">
            #{num,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('Price')">
            #{price,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('Amount')">
            #{amount,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('Comment')">
            #{comment,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Delete')">
            #{delete,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            #{id,jdbcType=BIGINT},
          </if>
          <if test="name != null">
            #{name,jdbcType=VARCHAR},
          </if>
          <if test="goods != null">
            #{goods,jdbcType=BIGINT},
          </if>
          <if test="goodsdelete != null">
            #{goodsdelete,jdbcType=VARCHAR},
          </if>
          <if test="approach != null">
            #{approach,jdbcType=VARCHAR},
          </if>
          <if test="user != null">
            #{user,jdbcType=VARCHAR},
          </if>
          <if test="order != null">
            #{order,jdbcType=BIGINT},
          </if>
          <if test="date != null">
            #{date,jdbcType=TIMESTAMP},
          </if>
          <if test="num != null">
            #{num,jdbcType=INTEGER},
          </if>
          <if test="price != null">
            #{price,jdbcType=DOUBLE},
          </if>
          <if test="amount != null">
            #{amount,jdbcType=DOUBLE},
          </if>
          <if test="comment != null">
            #{comment,jdbcType=VARCHAR},
          </if>
          <if test="delete != null">
            #{delete,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('Id')">
            `Id` = #{id,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('Name')">
            `Name` = #{name,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Goods')">
            `Goods` = #{goods,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('GoodsDelete')">
            `GoodsDelete` = #{goodsdelete,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Approach')">
            `Approach` = #{approach,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('User')">
            `User` = #{user,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Order')">
            `Order` = #{order,jdbcType=BIGINT},
          </if>
          <if test="_parameter.hasSelective('Date')">
            `Date` = #{date,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('Num')">
            `Num` = #{num,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('Price')">
            `Price` = #{price,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('Amount')">
            `Amount` = #{amount,jdbcType=DOUBLE},
          </if>
          <if test="_parameter.hasSelective('Comment')">
            `Comment` = #{comment,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('Delete')">
            `Delete` = #{delete,jdbcType=INTEGER},
          </if>
        </when>
        <otherwise>
          <if test="id != null">
            `Id` = #{id,jdbcType=BIGINT},
          </if>
          <if test="name != null">
            `Name` = #{name,jdbcType=VARCHAR},
          </if>
          <if test="goods != null">
            `Goods` = #{goods,jdbcType=BIGINT},
          </if>
          <if test="goodsdelete != null">
            `GoodsDelete` = #{goodsdelete,jdbcType=VARCHAR},
          </if>
          <if test="approach != null">
            `Approach` = #{approach,jdbcType=VARCHAR},
          </if>
          <if test="user != null">
            `User` = #{user,jdbcType=VARCHAR},
          </if>
          <if test="order != null">
            `Order` = #{order,jdbcType=BIGINT},
          </if>
          <if test="date != null">
            `Date` = #{date,jdbcType=TIMESTAMP},
          </if>
          <if test="num != null">
            `Num` = #{num,jdbcType=INTEGER},
          </if>
          <if test="price != null">
            `Price` = #{price,jdbcType=DOUBLE},
          </if>
          <if test="amount != null">
            `Amount` = #{amount,jdbcType=DOUBLE},
          </if>
          <if test="comment != null">
            `Comment` = #{comment,jdbcType=VARCHAR},
          </if>
          <if test="delete != null">
            `Delete` = #{delete,jdbcType=INTEGER},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
</mapper>